{"ast":null,"code":"var _jsxFileName = \"/Users/mythrikishore/ds3-2025/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n    // Load MediaPipe Pose\n    const {\n      Pose\n    } = window;\n    const pose = new Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n\n    // Pose detection callback\n    pose.onResults(results => {\n      // Clear the canvas before drawing new results\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (results.poseLandmarks) {\n        // Draw landmarks and connections\n        window.drawConnectors(canvasCtx, results.poseLandmarks, window.POSE_CONNECTIONS, {\n          color: \"#00FF00\",\n          lineWidth: 2\n        });\n        window.drawLandmarks(canvasCtx, results.poseLandmarks, {\n          color: \"#FF0000\",\n          lineWidth: 1\n        });\n      }\n      canvasCtx.restore();\n    });\n\n    // Start the webcam\n    const startCamera = async () => {\n      if (videoElement.srcObject) return; // Prevent reinitializing the camera if it's already running\n\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      });\n      videoElement.srcObject = stream;\n      videoElement.play();\n      setIsCameraReady(true); // Camera is now ready\n    };\n\n    // If the camera isn't ready, start it\n    if (!isCameraReady) {\n      startCamera();\n    }\n\n    // Start pose detection\n    const detectPose = async () => {\n      if (videoElement.readyState === 4) {\n        await pose.send({\n          image: videoElement\n        });\n      }\n      requestAnimationFrame(detectPose);\n    };\n    detectPose();\n  }, [isCameraReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pose Detection App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: \"none\"\n      },\n      width: \"640\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"480\",\n      style: {\n        border: \"2px solid black\",\n        borderRadius: \"12px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vMBOgNSf6dagpb4bnHgFv4MXl+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","canvasRef","isCameraReady","setIsCameraReady","videoElement","current","canvasElement","canvasCtx","getContext","Pose","window","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","minDetectionConfidence","minTrackingConfidence","onResults","results","save","clearRect","width","height","drawImage","image","poseLandmarks","drawConnectors","POSE_CONNECTIONS","color","lineWidth","drawLandmarks","restore","startCamera","srcObject","stream","navigator","mediaDevices","getUserMedia","video","audio","play","detectPose","readyState","send","requestAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/mythrikishore/ds3-2025/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n    // Load MediaPipe Pose\n    const { Pose } = window;\n\n    const pose = new Pose({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    // Pose detection callback\n    pose.onResults((results) => {\n      // Clear the canvas before drawing new results\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      canvasCtx.drawImage(\n        results.image,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n      if (results.poseLandmarks) {\n        // Draw landmarks and connections\n        window.drawConnectors(canvasCtx, results.poseLandmarks, window.POSE_CONNECTIONS, {\n          color: \"#00FF00\",\n          lineWidth: 2,\n        });\n        window.drawLandmarks(canvasCtx, results.poseLandmarks, {\n          color: \"#FF0000\",\n          lineWidth: 1,\n        });\n      }\n      canvasCtx.restore();\n    });\n\n    // Start the webcam\n    const startCamera = async () => {\n      if (videoElement.srcObject) return; // Prevent reinitializing the camera if it's already running\n\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false,\n      });\n      videoElement.srcObject = stream;\n      videoElement.play();\n      setIsCameraReady(true); // Camera is now ready\n    };\n\n    // If the camera isn't ready, start it\n    if (!isCameraReady) {\n      startCamera();\n    }\n\n    // Start pose detection\n    const detectPose = async () => {\n      if (videoElement.readyState === 4) {\n        await pose.send({ image: videoElement });\n      }\n      requestAnimationFrame(detectPose);\n    };\n\n    detectPose();\n\n  }, [isCameraReady]);\n\n  return (\n    <div className=\"App\">\n      <h2>Pose Detection App</h2>\n      <video\n        ref={videoRef}\n        style={{ display: \"none\" }}\n        width=\"640\"\n        height=\"480\"\n      />\n      <canvas\n        ref={canvasRef}\n        width=\"640\"\n        height=\"480\"\n        style={{ border: \"2px solid black\", borderRadius: \"12px\" }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
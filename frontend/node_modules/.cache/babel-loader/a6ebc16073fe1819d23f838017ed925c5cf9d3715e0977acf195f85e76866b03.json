{"ast":null,"code":"var _jsxFileName = \"/Users/estherchung/Desktop/pop-culture/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('lobby'); // 'lobby', 'waiting', 'playing', 'results'\n  const [roomId, setRoomId] = useState('');\n  const [playerId, setPlayerId] = useState('');\n  const [playerNumber, setPlayerNumber] = useState(null);\n  const [opponentScore, setOpponentScore] = useState(0);\n  const [gameResults, setGameResults] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const referenceVideoRef = useRef(null);\n  const referenceCanvasRef = useRef(null);\n  const opponentCanvasRef = useRef(null);\n  const poseRef = useRef(null);\n  const referencePoseRef = useRef(null);\n  const opponentPoseRef = useRef(null);\n  const [isReferenceVideoReady, setIsReferenceVideoReady] = useState(false);\n  const [isWebcamReady, setIsWebcamReady] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [similarityScore, setSimilarityScore] = useState(0);\n  const [isVideoEnded, setIsVideoEnded] = useState(false);\n  const [countdown, setCountdown] = useState(null);\n  const countdownRef = useRef(null);\n  const scoreHistoryRef = useRef([]);\n  const [showFinalScore, setShowFinalScore] = useState(false);\n  const wsRef = useRef(null);\n  const onResults = useCallback(results => {\n    if (!canvasRef.current) return;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (results.poseLandmarks) {\n      window.drawConnectors(canvasCtx, results.poseLandmarks, window.POSE_CONNECTIONS, {\n        color: '#00FF00',\n        lineWidth: 2\n      });\n      window.drawLandmarks(canvasCtx, results.poseLandmarks, {\n        color: '#FF0000',\n        lineWidth: 1,\n        radius: 3\n      });\n\n      // Send pose data to server\n      sendPoseData(results.poseLandmarks);\n      if (isPlaying && !isVideoEnded) {\n        var _referencePoseRef$cur, _referencePoseRef$cur2;\n        const referenceLandmarks = (_referencePoseRef$cur = referencePoseRef.current) === null || _referencePoseRef$cur === void 0 ? void 0 : (_referencePoseRef$cur2 = _referencePoseRef$cur.lastResults) === null || _referencePoseRef$cur2 === void 0 ? void 0 : _referencePoseRef$cur2.poseLandmarks;\n        if (referenceLandmarks) {\n          const score = calculateCosineSimilarity(results.poseLandmarks, referenceLandmarks);\n          scoreHistoryRef.current.push(score);\n          if (scoreHistoryRef.current.length % 5 === 0) {\n            const averageScore = calculateAverageScore(scoreHistoryRef.current);\n            setSimilarityScore(averageScore);\n          }\n        }\n      }\n    }\n  }, [isPlaying, isVideoEnded]);\n  const onReferenceResults = useCallback(results => {\n    if (!referenceCanvasRef.current) return;\n    const canvasElement = referenceCanvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n    // Clear the canvas\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    // Draw the video frame\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (results.poseLandmarks) {\n      // Draw the pose landmarks\n      window.drawConnectors(canvasCtx, results.poseLandmarks, window.POSE_CONNECTIONS, {\n        color: '#00FF00',\n        lineWidth: 2\n      });\n      window.drawLandmarks(canvasCtx, results.poseLandmarks, {\n        color: '#FF0000',\n        lineWidth: 1,\n        radius: 3\n      });\n\n      // Store reference poses if playing\n      if (isPlaying) {\n        referencePoseRef.current.lastResults = results;\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    // Initialize MediaPipe Pose for user video\n    const pose = new window.Pose({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      }\n    });\n\n    // Initialize MediaPipe Pose for reference video\n    const referencePose = new window.Pose({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      }\n    });\n\n    // Set options after a small delay to ensure proper initialization\n    setTimeout(() => {\n      pose.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.5,\n        minTrackingConfidence: 0.5\n      });\n      referencePose.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.5,\n        minTrackingConfidence: 0.5\n      });\n      pose.onResults(onResults);\n      referencePose.onResults(onReferenceResults);\n      poseRef.current = pose;\n      referencePoseRef.current = referencePose;\n    }, 100);\n\n    // Access webcam\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => {\n          videoRef.current.play().then(() => setIsWebcamReady(true)).catch(err => console.error(\"Error playing webcam:\", err));\n        };\n      }\n    }).catch(err => {\n      console.error(\"Error accessing webcam:\", err);\n    });\n    return () => {\n      // Cleanup\n      if (poseRef.current) {\n        poseRef.current.close();\n      }\n      if (referencePoseRef.current) {\n        referencePoseRef.current.close();\n      }\n    };\n  }, [onResults, onReferenceResults]);\n  const calculateMovementVector = (pose1, pose2) => {\n    if (!pose1 || !pose2) return null;\n    const vector = [];\n    for (let i = 0; i < pose1.length; i++) {\n      if (pose1[i] && pose2[i]) {\n        vector.push({\n          x: pose2[i].x - pose1[i].x,\n          y: pose2[i].y - pose1[i].y\n        });\n      }\n    }\n    return vector;\n  };\n  const calculateCosineSimilarity = (vec1, vec2) => {\n    if (!vec1 || !vec2 || vec1.length !== vec2.length) return 0;\n    let dotProduct = 0;\n    let magnitude1 = 0;\n    let magnitude2 = 0;\n    for (let i = 0; i < vec1.length; i++) {\n      if (vec1[i] && vec2[i]) {\n        dotProduct += vec1[i].x * vec2[i].x + vec1[i].y * vec2[i].y;\n        magnitude1 += vec1[i].x * vec1[i].x + vec1[i].y * vec1[i].y;\n        magnitude2 += vec2[i].x * vec2[i].x + vec2[i].y * vec2[i].y;\n      }\n    }\n    magnitude1 = Math.sqrt(magnitude1);\n    magnitude2 = Math.sqrt(magnitude2);\n    if (magnitude1 === 0 || magnitude2 === 0) return 0;\n\n    // Convert cosine similarity from [-1, 1] to [0, 1] and add 50\n    const similarity = (dotProduct / (magnitude1 * magnitude2) + 1) / 2;\n    return similarity * 50 + 50;\n  };\n  const calculateSimilarity = () => {\n    if (referencePoseRef.current.lastResults && onResults.current) {\n      const referenceLandmarks = referencePoseRef.current.lastResults.poseLandmarks;\n      const userLandmarks = onResults.current.poseLandmarks;\n      return calculateCosineSimilarity(userLandmarks, referenceLandmarks);\n    }\n    return 0;\n  };\n  const handleVideoEnd = () => {\n    setIsPlaying(false);\n    setIsVideoEnded(true);\n    const score = calculateSimilarity();\n    setSimilarityScore(score);\n    referencePoseRef.current.lastResults = null;\n  };\n  const startCountdown = () => {\n    setCountdown(3);\n  };\n  useEffect(() => {\n    let timer;\n    if (countdown > 0) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (countdown === 0) {\n      // Start the video when countdown reaches 0\n      if (referenceVideoRef.current) {\n        referenceVideoRef.current.play();\n        setIsPlaying(true);\n        setIsVideoEnded(false);\n        setSimilarityScore(null);\n      }\n      setCountdown(null);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [countdown]);\n  const togglePlayPause = () => {\n    if (referenceVideoRef.current) {\n      if (isPlaying) {\n        referenceVideoRef.current.pause();\n        setIsPlaying(false);\n        setIsVideoEnded(true);\n      } else {\n        startCountdown();\n      }\n    }\n  };\n  const restartVideo = () => {\n    if (referenceVideoRef.current) {\n      referenceVideoRef.current.currentTime = 0;\n      setIsPlaying(false);\n      setIsVideoEnded(true);\n      setSimilarityScore(null);\n    }\n  };\n  const handleReferenceVideoLoad = () => {\n    if (referenceVideoRef.current) {\n      setIsReferenceVideoReady(true);\n    }\n  };\n  useEffect(() => {\n    let animationFrameId;\n    let lastProcessTime = 0;\n    const processInterval = 1000 / 30; // Process at 30fps\n\n    const processFrame = async timestamp => {\n      if (timestamp - lastProcessTime >= processInterval) {\n        try {\n          if (videoRef.current && poseRef.current && isWebcamReady) {\n            await poseRef.current.send({\n              image: videoRef.current\n            });\n          }\n          if (referenceVideoRef.current && referencePoseRef.current && isReferenceVideoReady && isPlaying) {\n            await referencePoseRef.current.send({\n              image: referenceVideoRef.current\n            });\n          }\n          lastProcessTime = timestamp;\n        } catch (error) {\n          console.error(\"Error processing frame:\", error);\n        }\n      }\n      animationFrameId = requestAnimationFrame(processFrame);\n    };\n    processFrame(0);\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, [isWebcamReady, isReferenceVideoReady, isPlaying]);\n\n  // Create a new game room\n  const createRoom = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/create-room', {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setRoomId(data.room_id);\n      setGameState('waiting');\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n\n  // Join an existing room\n  const joinRoom = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/join-room/${roomId}`, {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setPlayerId(data.player_id);\n      setPlayerNumber(data.player_number);\n      setGameState('playing');\n      connectWebSocket();\n    } catch (error) {\n      console.error('Error joining room:', error);\n    }\n  };\n\n  // Connect to WebSocket\n  const connectWebSocket = () => {\n    const ws = new WebSocket(`ws://localhost:8000/ws/${roomId}/${playerId}`);\n    wsRef.current = ws;\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'opponent_pose') {\n        // Update opponent's pose overlay\n        if (opponentCanvasRef.current && opponentPoseRef.current) {\n          const canvasCtx = opponentCanvasRef.current.getContext('2d');\n          canvasCtx.clearRect(0, 0, opponentCanvasRef.current.width, opponentCanvasRef.current.height);\n          if (data.landmarks) {\n            window.drawConnectors(canvasCtx, data.landmarks, window.POSE_CONNECTIONS, {\n              color: '#0000FF',\n              lineWidth: 2\n            });\n            window.drawLandmarks(canvasCtx, data.landmarks, {\n              color: '#FF00FF',\n              lineWidth: 1,\n              radius: 3\n            });\n          }\n        }\n      } else if (data.type === 'game_result') {\n        setGameResults(data);\n        setGameState('results');\n      }\n    };\n  };\n\n  // Send pose data to server\n  const sendPoseData = landmarks => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      var _referencePoseRef$cur3, _referencePoseRef$cur4;\n      wsRef.current.send(JSON.stringify({\n        landmarks: landmarks,\n        reference_landmarks: (_referencePoseRef$cur3 = referencePoseRef.current) === null || _referencePoseRef$cur3 === void 0 ? void 0 : (_referencePoseRef$cur4 = _referencePoseRef$cur3.lastResults) === null || _referencePoseRef$cur4 === void 0 ? void 0 : _referencePoseRef$cur4.poseLandmarks\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dance Battle App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), gameState === 'lobby' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRoom,\n        style: buttonStyle,\n        children: \"Create New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: roomId,\n          onChange: e => setRoomId(e.target.value),\n          placeholder: \"Enter Room Code\",\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinRoom,\n          style: buttonStyle,\n          children: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room Code: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for opponent to join...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: videoContainerStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reference Dance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: referenceVideoRef,\n              src: \"/justdance1.mp4\",\n              playsInline: true,\n              onLoadedMetadata: handleReferenceVideoLoad,\n              style: videoStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: referenceCanvasRef,\n              style: canvasOverlayStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: videoContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reference Dance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: referenceVideoRef,\n            src: \"/justdance1.mp4\",\n            playsInline: true,\n            onLoadedMetadata: handleReferenceVideoLoad,\n            style: videoStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: referenceCanvasRef,\n            style: canvasOverlayStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: videoContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            style: {\n              ...videoStyle,\n              transform: 'scaleX(-1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              ...canvasOverlayStyle,\n              transform: 'scaleX(-1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: videoContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Opponent's Performance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: opponentCanvasRef,\n            style: canvasOverlayStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), gameState === 'results' && gameResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        color: 'white',\n        padding: '40px',\n        borderRadius: '20px',\n        textAlign: 'center',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '24px',\n          margin: '20px 0'\n        },\n        children: gameResults.winner_id === playerId ? 'You Won!' : 'Opponent Won!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score: \", gameResults.scores[playerId], \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Opponent's Score: \", gameResults.scores[gameResults.winner_id === playerId ? gameResults.winner_id === gameResults.scores.player1_id ? gameResults.scores.player2_id : gameResults.scores.player1_id : gameResults.winner_id], \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setGameState('lobby');\n          setRoomId('');\n          setPlayerId('');\n          setPlayerNumber(null);\n          setGameResults(null);\n        },\n        style: buttonStyle,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this), countdown !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: countdownStyle,\n      children: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }, this), isPlaying && !isVideoEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: scoreStyle,\n      children: [\"Similarity Score: \", similarityScore.toFixed(1), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n}\n\n// Styles\n_s(App, \"22p0y2JZ+K5LIIHktBlDNWenmt0=\");\n_c = App;\nconst buttonStyle = {\n  padding: '10px 20px',\n  fontSize: '16px',\n  backgroundColor: '#4CAF50',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  margin: '5px'\n};\nconst inputStyle = {\n  padding: '10px',\n  fontSize: '16px',\n  margin: '5px',\n  width: '200px'\n};\nconst videoContainerStyle = {\n  position: 'relative',\n  width: '400px',\n  marginBottom: '20px'\n};\nconst videoStyle = {\n  width: '100%',\n  height: 'auto',\n  borderRadius: '12px',\n  boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n  display: 'block'\n};\nconst canvasOverlayStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  borderRadius: '12px'\n};\nconst countdownStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  color: 'white',\n  padding: '40px',\n  borderRadius: '50%',\n  fontSize: '72px',\n  fontWeight: 'bold',\n  width: '150px',\n  height: '150px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  zIndex: 1000\n};\nconst scoreStyle = {\n  position: 'fixed',\n  top: '20px',\n  right: '20px',\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  color: 'white',\n  padding: '20px',\n  borderRadius: '10px',\n  fontSize: '24px',\n  fontWeight: 'bold'\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","roomId","setRoomId","playerId","setPlayerId","playerNumber","setPlayerNumber","opponentScore","setOpponentScore","gameResults","setGameResults","videoRef","canvasRef","referenceVideoRef","referenceCanvasRef","opponentCanvasRef","poseRef","referencePoseRef","opponentPoseRef","isReferenceVideoReady","setIsReferenceVideoReady","isWebcamReady","setIsWebcamReady","isPlaying","setIsPlaying","similarityScore","setSimilarityScore","isVideoEnded","setIsVideoEnded","countdown","setCountdown","countdownRef","scoreHistoryRef","showFinalScore","setShowFinalScore","wsRef","onResults","results","current","canvasElement","canvasCtx","getContext","clearRect","width","height","drawImage","image","poseLandmarks","window","drawConnectors","POSE_CONNECTIONS","color","lineWidth","drawLandmarks","radius","sendPoseData","_referencePoseRef$cur","_referencePoseRef$cur2","referenceLandmarks","lastResults","score","calculateCosineSimilarity","push","length","averageScore","calculateAverageScore","onReferenceResults","pose","Pose","locateFile","file","referencePose","setTimeout","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","onloadedmetadata","play","catch","err","console","error","close","calculateMovementVector","pose1","pose2","vector","i","x","y","vec1","vec2","dotProduct","magnitude1","magnitude2","Math","sqrt","similarity","calculateSimilarity","userLandmarks","handleVideoEnd","startCountdown","timer","clearTimeout","togglePlayPause","pause","restartVideo","currentTime","handleReferenceVideoLoad","animationFrameId","lastProcessTime","processInterval","processFrame","timestamp","send","requestAnimationFrame","cancelAnimationFrame","createRoom","response","fetch","method","data","json","room_id","joinRoom","player_id","player_number","connectWebSocket","ws","WebSocket","onmessage","event","JSON","parse","type","landmarks","readyState","OPEN","_referencePoseRef$cur3","_referencePoseRef$cur4","stringify","reference_landmarks","className","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonStyle","marginTop","value","onChange","e","target","placeholder","inputStyle","display","justifyContent","gap","videoContainerStyle","position","ref","src","playsInline","onLoadedMetadata","videoStyle","canvasOverlayStyle","flexWrap","autoPlay","transform","top","left","backgroundColor","borderRadius","zIndex","fontSize","margin","winner_id","scores","player1_id","player2_id","countdownStyle","scoreStyle","toFixed","_c","border","cursor","marginBottom","boxShadow","fontWeight","alignItems","right","$RefreshReg$"],"sources":["/Users/estherchung/Desktop/pop-culture/frontend/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\n\nfunction App() {\n  const [gameState, setGameState] = useState('lobby'); // 'lobby', 'waiting', 'playing', 'results'\n  const [roomId, setRoomId] = useState('');\n  const [playerId, setPlayerId] = useState('');\n  const [playerNumber, setPlayerNumber] = useState(null);\n  const [opponentScore, setOpponentScore] = useState(0);\n  const [gameResults, setGameResults] = useState(null);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const referenceVideoRef = useRef(null);\n  const referenceCanvasRef = useRef(null);\n  const opponentCanvasRef = useRef(null);\n  const poseRef = useRef(null);\n  const referencePoseRef = useRef(null);\n  const opponentPoseRef = useRef(null);\n  const [isReferenceVideoReady, setIsReferenceVideoReady] = useState(false);\n  const [isWebcamReady, setIsWebcamReady] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [similarityScore, setSimilarityScore] = useState(0);\n  const [isVideoEnded, setIsVideoEnded] = useState(false);\n  const [countdown, setCountdown] = useState(null);\n  const countdownRef = useRef(null);\n  const scoreHistoryRef = useRef([]);\n  const [showFinalScore, setShowFinalScore] = useState(false);\n  const wsRef = useRef(null);\n\n  const onResults = useCallback((results) => {\n    if (!canvasRef.current) return;\n    \n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n\n    if (results.poseLandmarks) {\n      window.drawConnectors(canvasCtx, results.poseLandmarks, window.POSE_CONNECTIONS,\n        { color: '#00FF00', lineWidth: 2 });\n      window.drawLandmarks(canvasCtx, results.poseLandmarks,\n        { color: '#FF0000', lineWidth: 1, radius: 3 });\n\n      // Send pose data to server\n      sendPoseData(results.poseLandmarks);\n\n      if (isPlaying && !isVideoEnded) {\n        const referenceLandmarks = referencePoseRef.current?.lastResults?.poseLandmarks;\n        if (referenceLandmarks) {\n          const score = calculateCosineSimilarity(results.poseLandmarks, referenceLandmarks);\n          scoreHistoryRef.current.push(score);\n          if (scoreHistoryRef.current.length % 5 === 0) {\n            const averageScore = calculateAverageScore(scoreHistoryRef.current);\n            setSimilarityScore(averageScore);\n          }\n        }\n      }\n    }\n  }, [isPlaying, isVideoEnded]);\n\n  const onReferenceResults = useCallback((results) => {\n    if (!referenceCanvasRef.current) return;\n    \n    const canvasElement = referenceCanvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n\n    // Clear the canvas\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    // Draw the video frame\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n\n    if (results.poseLandmarks) {\n      // Draw the pose landmarks\n      window.drawConnectors(canvasCtx, results.poseLandmarks, window.POSE_CONNECTIONS,\n        { color: '#00FF00', lineWidth: 2 });\n      window.drawLandmarks(canvasCtx, results.poseLandmarks,\n        { color: '#FF0000', lineWidth: 1, radius: 3 });\n\n      // Store reference poses if playing\n      if (isPlaying) {\n        referencePoseRef.current.lastResults = results;\n      }\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    // Initialize MediaPipe Pose for user video\n    const pose = new window.Pose({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      }\n    });\n\n    // Initialize MediaPipe Pose for reference video\n    const referencePose = new window.Pose({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      }\n    });\n\n    // Set options after a small delay to ensure proper initialization\n    setTimeout(() => {\n      pose.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.5,\n        minTrackingConfidence: 0.5\n      });\n\n      referencePose.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.5,\n        minTrackingConfidence: 0.5\n      });\n\n      pose.onResults(onResults);\n      referencePose.onResults(onReferenceResults);\n      poseRef.current = pose;\n      referencePoseRef.current = referencePose;\n    }, 100);\n\n    // Access webcam\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play()\n              .then(() => setIsWebcamReady(true))\n              .catch(err => console.error(\"Error playing webcam:\", err));\n          };\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error accessing webcam:\", err);\n      });\n\n    return () => {\n      // Cleanup\n      if (poseRef.current) {\n        poseRef.current.close();\n      }\n      if (referencePoseRef.current) {\n        referencePoseRef.current.close();\n      }\n    };\n  }, [onResults, onReferenceResults]);\n\n  const calculateMovementVector = (pose1, pose2) => {\n    if (!pose1 || !pose2) return null;\n    \n    const vector = [];\n    for (let i = 0; i < pose1.length; i++) {\n      if (pose1[i] && pose2[i]) {\n        vector.push({\n          x: pose2[i].x - pose1[i].x,\n          y: pose2[i].y - pose1[i].y\n        });\n      }\n    }\n    return vector;\n  };\n\n  const calculateCosineSimilarity = (vec1, vec2) => {\n    if (!vec1 || !vec2 || vec1.length !== vec2.length) return 0;\n\n    let dotProduct = 0;\n    let magnitude1 = 0;\n    let magnitude2 = 0;\n\n    for (let i = 0; i < vec1.length; i++) {\n      if (vec1[i] && vec2[i]) {\n        dotProduct += vec1[i].x * vec2[i].x + vec1[i].y * vec2[i].y;\n        magnitude1 += vec1[i].x * vec1[i].x + vec1[i].y * vec1[i].y;\n        magnitude2 += vec2[i].x * vec2[i].x + vec2[i].y * vec2[i].y;\n      }\n    }\n\n    magnitude1 = Math.sqrt(magnitude1);\n    magnitude2 = Math.sqrt(magnitude2);\n\n    if (magnitude1 === 0 || magnitude2 === 0) return 0;\n    \n    // Convert cosine similarity from [-1, 1] to [0, 1] and add 50\n    const similarity = (dotProduct / (magnitude1 * magnitude2) + 1) / 2;\n    return (similarity * 50) + 50;\n  };\n\n  const calculateSimilarity = () => {\n    if (referencePoseRef.current.lastResults && onResults.current) {\n      const referenceLandmarks = referencePoseRef.current.lastResults.poseLandmarks;\n      const userLandmarks = onResults.current.poseLandmarks;\n      return calculateCosineSimilarity(userLandmarks, referenceLandmarks);\n    }\n    return 0;\n  };\n\n  const handleVideoEnd = () => {\n    setIsPlaying(false);\n    setIsVideoEnded(true);\n    const score = calculateSimilarity();\n    setSimilarityScore(score);\n    referencePoseRef.current.lastResults = null;\n  };\n\n  const startCountdown = () => {\n    setCountdown(3);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (countdown > 0) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (countdown === 0) {\n      // Start the video when countdown reaches 0\n      if (referenceVideoRef.current) {\n        referenceVideoRef.current.play();\n        setIsPlaying(true);\n        setIsVideoEnded(false);\n        setSimilarityScore(null);\n      }\n      setCountdown(null);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [countdown]);\n\n  const togglePlayPause = () => {\n    if (referenceVideoRef.current) {\n      if (isPlaying) {\n        referenceVideoRef.current.pause();\n        setIsPlaying(false);\n        setIsVideoEnded(true);\n      } else {\n        startCountdown();\n      }\n    }\n  };\n\n  const restartVideo = () => {\n    if (referenceVideoRef.current) {\n      referenceVideoRef.current.currentTime = 0;\n      setIsPlaying(false);\n      setIsVideoEnded(true);\n      setSimilarityScore(null);\n    }\n  };\n\n  const handleReferenceVideoLoad = () => {\n    if (referenceVideoRef.current) {\n      setIsReferenceVideoReady(true);\n    }\n  };\n\n  useEffect(() => {\n    let animationFrameId;\n    let lastProcessTime = 0;\n    const processInterval = 1000 / 30; // Process at 30fps\n\n    const processFrame = async (timestamp) => {\n      if (timestamp - lastProcessTime >= processInterval) {\n        try {\n          if (videoRef.current && poseRef.current && isWebcamReady) {\n            await poseRef.current.send({ image: videoRef.current });\n          }\n          if (referenceVideoRef.current && referencePoseRef.current && isReferenceVideoReady && isPlaying) {\n            await referencePoseRef.current.send({ image: referenceVideoRef.current });\n          }\n          lastProcessTime = timestamp;\n        } catch (error) {\n          console.error(\"Error processing frame:\", error);\n        }\n      }\n      animationFrameId = requestAnimationFrame(processFrame);\n    };\n\n    processFrame(0);\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, [isWebcamReady, isReferenceVideoReady, isPlaying]);\n\n  // Create a new game room\n  const createRoom = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/create-room', {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setRoomId(data.room_id);\n      setGameState('waiting');\n    } catch (error) {\n      console.error('Error creating room:', error);\n    }\n  };\n\n  // Join an existing room\n  const joinRoom = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/join-room/${roomId}`, {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setPlayerId(data.player_id);\n      setPlayerNumber(data.player_number);\n      setGameState('playing');\n      connectWebSocket();\n    } catch (error) {\n      console.error('Error joining room:', error);\n    }\n  };\n\n  // Connect to WebSocket\n  const connectWebSocket = () => {\n    const ws = new WebSocket(`ws://localhost:8000/ws/${roomId}/${playerId}`);\n    wsRef.current = ws;\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'opponent_pose') {\n        // Update opponent's pose overlay\n        if (opponentCanvasRef.current && opponentPoseRef.current) {\n          const canvasCtx = opponentCanvasRef.current.getContext('2d');\n          canvasCtx.clearRect(0, 0, opponentCanvasRef.current.width, opponentCanvasRef.current.height);\n          if (data.landmarks) {\n            window.drawConnectors(canvasCtx, data.landmarks, window.POSE_CONNECTIONS,\n              { color: '#0000FF', lineWidth: 2 });\n            window.drawLandmarks(canvasCtx, data.landmarks,\n              { color: '#FF00FF', lineWidth: 1, radius: 3 });\n          }\n        }\n      } else if (data.type === 'game_result') {\n        setGameResults(data);\n        setGameState('results');\n      }\n    };\n  };\n\n  // Send pose data to server\n  const sendPoseData = (landmarks) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify({\n        landmarks: landmarks,\n        reference_landmarks: referencePoseRef.current?.lastResults?.poseLandmarks\n      }));\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h1>Dance Battle App</h1>\n\n      {gameState === 'lobby' && (\n        <div>\n          <button onClick={createRoom} style={buttonStyle}>\n            Create New Game\n          </button>\n          <div style={{ marginTop: '20px' }}>\n            <input\n              type=\"text\"\n              value={roomId}\n              onChange={(e) => setRoomId(e.target.value)}\n              placeholder=\"Enter Room Code\"\n              style={inputStyle}\n            />\n            <button onClick={joinRoom} style={buttonStyle}>\n              Join Game\n            </button>\n          </div>\n        </div>\n      )}\n\n      {gameState === 'waiting' && (\n        <div>\n          <h2>Room Code: {roomId}</h2>\n          <p>Waiting for opponent to join...</p>\n          <div style={{ display: 'flex', justifyContent: 'center', gap: '20px' }}>\n            <div style={videoContainerStyle}>\n              <h3>Reference Dance</h3>\n              <div style={{ position: 'relative' }}>\n                <video\n                  ref={referenceVideoRef}\n                  src=\"/justdance1.mp4\"\n                  playsInline\n                  onLoadedMetadata={handleReferenceVideoLoad}\n                  style={videoStyle}\n                />\n                <canvas\n                  ref={referenceCanvasRef}\n                  style={canvasOverlayStyle}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameState === 'playing' && (\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}>\n          {/* Reference Video */}\n          <div style={videoContainerStyle}>\n            <h3>Reference Dance</h3>\n            <div style={{ position: 'relative' }}>\n              <video\n                ref={referenceVideoRef}\n                src=\"/justdance1.mp4\"\n                playsInline\n                onLoadedMetadata={handleReferenceVideoLoad}\n                style={videoStyle}\n              />\n              <canvas\n                ref={referenceCanvasRef}\n                style={canvasOverlayStyle}\n              />\n            </div>\n          </div>\n\n          {/* Your Webcam */}\n          <div style={videoContainerStyle}>\n            <h3>Your Performance</h3>\n            <div style={{ position: 'relative' }}>\n              <video\n                ref={videoRef}\n                autoPlay\n                playsInline\n                style={{ ...videoStyle, transform: 'scaleX(-1)' }}\n              />\n              <canvas\n                ref={canvasRef}\n                style={{ ...canvasOverlayStyle, transform: 'scaleX(-1)' }}\n              />\n            </div>\n          </div>\n\n          {/* Opponent's Webcam */}\n          <div style={videoContainerStyle}>\n            <h3>Opponent's Performance</h3>\n            <div style={{ position: 'relative' }}>\n              <canvas\n                ref={opponentCanvasRef}\n                style={canvasOverlayStyle}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameState === 'results' && gameResults && (\n        <div style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          color: 'white',\n          padding: '40px',\n          borderRadius: '20px',\n          textAlign: 'center',\n          zIndex: 1000\n        }}>\n          <h2>Game Results</h2>\n          <div style={{ fontSize: '24px', margin: '20px 0' }}>\n            {gameResults.winner_id === playerId ? 'You Won!' : 'Opponent Won!'}\n          </div>\n          <div style={{ margin: '20px 0' }}>\n            <p>Your Score: {gameResults.scores[playerId]}%</p>\n            <p>Opponent's Score: {gameResults.scores[gameResults.winner_id === playerId ? \n              (gameResults.winner_id === gameResults.scores.player1_id ? gameResults.scores.player2_id : gameResults.scores.player1_id) \n              : gameResults.winner_id]}%</p>\n          </div>\n          <button\n            onClick={() => {\n              setGameState('lobby');\n              setRoomId('');\n              setPlayerId('');\n              setPlayerNumber(null);\n              setGameResults(null);\n            }}\n            style={buttonStyle}\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {/* Countdown Display */}\n      {countdown !== null && (\n        <div style={countdownStyle}>\n          {countdown}\n        </div>\n      )}\n\n      {/* Similarity Score Display */}\n      {isPlaying && !isVideoEnded && (\n        <div style={scoreStyle}>\n          Similarity Score: {similarityScore.toFixed(1)}%\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Styles\nconst buttonStyle = {\n  padding: '10px 20px',\n  fontSize: '16px',\n  backgroundColor: '#4CAF50',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  margin: '5px'\n};\n\nconst inputStyle = {\n  padding: '10px',\n  fontSize: '16px',\n  margin: '5px',\n  width: '200px'\n};\n\nconst videoContainerStyle = {\n  position: 'relative',\n  width: '400px',\n  marginBottom: '20px'\n};\n\nconst videoStyle = {\n  width: '100%',\n  height: 'auto',\n  borderRadius: '12px',\n  boxShadow: '0 0 10px rgba(0,0,0,0.3)',\n  display: 'block'\n};\n\nconst canvasOverlayStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  borderRadius: '12px'\n};\n\nconst countdownStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  color: 'white',\n  padding: '40px',\n  borderRadius: '50%',\n  fontSize: '72px',\n  fontWeight: 'bold',\n  width: '150px',\n  height: '150px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  zIndex: 1000\n};\n\nconst scoreStyle = {\n  position: 'fixed',\n  top: '20px',\n  right: '20px',\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  color: 'white',\n  padding: '20px',\n  borderRadius: '10px',\n  fontSize: '24px',\n  fontWeight: 'bold'\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}